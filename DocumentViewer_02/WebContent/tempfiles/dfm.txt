            /*if(!textSign.equalsIgnoreCase("signText")){
                //create String object to be converted to image
                   String sampleText = textSign;
                   
                    //Image file name
                   //String fileName = "Image";
                    //create a File Object
                    //File newFile = new File("./" + fileName + ".jpeg");
                    //FileOutputStream imgout = new FileOutputStream(newFile);
                   ByteArrayOutputStream imgout = new ByteArrayOutputStream();
                    //create the font you wish to use
                    Font font = new Font(Font.SANS_SERIF, Font.ITALIC, 25);//"Tahoma"
                    
                    //create the FontRenderContext object which helps us to measure the text
                    FontRenderContext frc = new FontRenderContext(null, true, true);
                    
                    //get the height and width of the text
                    Rectangle2D bounds = font.getStringBounds(sampleText, frc);
                    int w = (int) bounds.getWidth()+10;
                    int h = (int) bounds.getHeight();     
                    //create a BufferedImage object
                    BufferedImage textImage = new BufferedImage(w, h,   BufferedImage.TYPE_INT_RGB);        
                    //calling createGraphics() to get the Graphics2D
                    Graphics2D g = textImage.createGraphics();          
                    //set color and other parameters
                    g.setColor(Color.WHITE);
                    g.fillRect(0, 0, w, h);
                    g.setColor(Color.BLACK);
                    g.setFont(font);     
                    g.drawString(sampleText, (float) bounds.getX(), (float) -bounds.getY());     
                    //releasing resources
                    g.dispose();
                    //creating the file
                    ImageIO.write(textImage, "png", imgout);
                    byte[] decodedBytes = imgout.toByteArray();//decoder.decodeBuffer(imageStream);
                    image = com.itextpdf.text.Image.getInstance(decodedBytes);
                    
            }else{*/